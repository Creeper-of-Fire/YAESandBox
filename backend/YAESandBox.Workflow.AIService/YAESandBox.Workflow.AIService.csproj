<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <AnalysisModeConfigureAwait>Library</AnalysisModeConfigureAwait>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\YAESandBox.Authentication\YAESandBox.Authentication.csproj" />
        <ProjectReference Include="..\YAESandBox.Depend.AspNetCore\YAESandBox.Depend.AspNetCore.csproj"/>
        <ProjectReference Include="..\YAESandBox.Depend\YAESandBox.Depend.csproj"/>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
            <_Parameter1>YAESandBox.Workflow.Test</_Parameter1>
        </AssemblyAttribute>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Core" Version="2.3.0"/>
        <PackageReference Include="Microsoft.Extensions.Http" Version="9.0.9" />
        <PackageReference Include="Microsoft.OpenApi" Version="1.6.26" />
        <PackageReference Include="Nito.AsyncEx.Coordination" Version="5.1.2"/>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="Capabilities\CapabilitiesResources.resx">
          <Generator>ResXFileCodeGenerator</Generator>
          <LastGenOutput>Capabilities.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="AiConfig\GeneralAiResources.resx">
          <Generator>PublicResXFileCodeGenerator</Generator>
          <LastGenOutput>GeneralAiResources.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="AiConfig\Doubao\DoubaoAiResources.resx">
          <Generator>PublicResXFileCodeGenerator</Generator>
          <LastGenOutput>DoubaoAiResources.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="AiConfig\DeepSeek\DeepSeekAiResources.resx">
          <Generator>PublicResXFileCodeGenerator</Generator>
          <LastGenOutput>DeepSeekAiResources.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="AiConfig\Gemini\GeminiAiResources.resx">
          <Generator>PublicResXFileCodeGenerator</Generator>
          <LastGenOutput>GeminiAiResource.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="AiConfig\OpenAiCompatible\OpenAiCompatibleAiResources.resx">
          <Generator>PublicResXFileCodeGenerator</Generator>
          <LastGenOutput>OpenAiCompatible.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <Compile Update="Capabilities\CapabilitiesResources.Designer.cs">
          <DesignTime>True</DesignTime>
          <AutoGen>True</AutoGen>
          <DependentUpon>CapabilitiesResources.resx</DependentUpon>
        </Compile>
        <Compile Update="AiConfig\GeneralAiResources.Designer.cs">
          <DesignTime>True</DesignTime>
          <AutoGen>True</AutoGen>
          <DependentUpon>GeneralAiResources.resx</DependentUpon>
        </Compile>
        <Compile Update="AiConfig\Doubao\DoubaoAiResources.Designer.cs">
          <DesignTime>True</DesignTime>
          <AutoGen>True</AutoGen>
          <DependentUpon>DoubaoAiResources.resx</DependentUpon>
        </Compile>
        <Compile Update="AiConfig\DeepSeek\DeepSeekAiResources.Designer.cs">
          <DesignTime>True</DesignTime>
          <AutoGen>True</AutoGen>
          <DependentUpon>DeepSeekAiResources.resx</DependentUpon>
        </Compile>
        <Compile Update="AiConfig\Gemini\GeminiAiResources.Designer.cs">
          <DesignTime>True</DesignTime>
          <AutoGen>True</AutoGen>
          <DependentUpon>GeminiAiResources.resx</DependentUpon>
        </Compile>
        <Compile Update="AiConfig\OpenAiCompatible\OpenAiCompatibleAiResources.Designer.cs">
          <DesignTime>True</DesignTime>
          <AutoGen>True</AutoGen>
          <DependentUpon>OpenAiCompatibleAiResources.resx</DependentUpon>
        </Compile>
    </ItemGroup>
    
    <ItemGroup>
        <!-- 
          - Identity (Include): Swagger 文档的名称，必须和 C# 代码中的 docName 完全一致。
          - JsonFileName: 生成的 swagger.json 文件的名字。
          - TsOutputSubDir: 生成的 TypeScript 客户端代码的子目录名。
          - TsClientRoot: 生成的 TypeScript 客户端代码的根目录。$(MSBuildProjectDirectory) 是当前 csproj 文件所在的目录。
        -->
        <!-- AI 服务配置 API (来自 AiServiceConfigModule) -->
        <SwaggerDocToGenerate Include="v1-ai-config" Visible="false">
            <JsonFileName>ai-config-api.swagger.json</JsonFileName>
            <TsOutputSubDir>ai-config-api-client</TsOutputSubDir>
            <TsClientRoot>$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)/../../frontend/plugins/workbench/src'))</TsClientRoot>
        </SwaggerDocToGenerate>
    </ItemGroup>

</Project>
