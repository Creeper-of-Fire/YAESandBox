{
  "openapi": "3.0.4",
  "info": {
    "title": "YAESandBox API",
    "version": "v1"
  },
  "paths": {
    "/api/atomic/{blockId}": {
      "post": {
        "tags": [
          "Atomic"
        ],
        "summary": "对指定的 Block 执行一批原子化操作。\r\n根据 Block 的当前状态，操作可能被立即执行或暂存。",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "要执行操作的目标 Block 的 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "包含原子操作列表的请求体。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchAtomicRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchAtomicRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BatchAtomicRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "操作已成功执行 (适用于 Idle 状态)。"
          },
          "202": {
            "description": "操作已成功执行并/或已暂存 (适用于 Loading 状态)。"
          },
          "404": {
            "description": "未找到具有指定 ID 的 Block。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Block 当前处于冲突状态 (ResolvingConflict)，需要先解决冲突。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "请求中包含无效的原子操作定义。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "执行操作时发生内部服务器错误。"
          }
        }
      }
    },
    "/api/manage/blocks/{blockId}": {
      "delete": {
        "tags": [
          "BlockManagement"
        ],
        "summary": "手动删除一个指定的 Block。",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recursive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Blocks": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "获取所有 Block 的摘要信息字典。\r\n返回一个以 Block ID 为键，Block 详细信息 DTO 为值的只读字典。",
        "responses": {
          "200": {
            "description": "成功返回 Block 字典。",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/BlockDetailDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/BlockDetailDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/BlockDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Blocks/{blockId}": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "获取指定 ID 的单个 Block 的详细信息（不包含 WorldState）。",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "要查询的 Block 的唯一 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功返回 Block 详细信息。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlockDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "未找到具有指定 ID 的 Block。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Blocks/topology": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "获取整个 Block 树的拓扑结构 (基于 ID 的嵌套关系)。\r\n返回一个表示 Block 树层级结构的 JSON 对象。",
        "responses": {
          "200": {
            "description": "成功返回 JSON 格式的拓扑结构。\r\n            形如：{ \"id\": \"__WORLD__\", \"children\": [{ \"id\": \"child1\", \"children\": [] },{ \"id\": \"child2\", \"children\": [] }] }",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlockNode"
                }
              }
            }
          },
          "500": {
            "description": "生成拓扑结构时发生内部服务器错误。"
          }
        }
      }
    },
    "/api/entities": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "获取指定 Block 当前可交互 WorldState 中的所有非销毁实体摘要信息。",
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "要查询的目标 Block 的 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功返回实体摘要列表。",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntitySummaryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntitySummaryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntitySummaryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "缺少必需的 'blockId' 查询参数。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "未找到具有指定 ID 的 Block 或 Block 无法访问。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/entities/{entityType}/{entityId}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "获取指定 Block 当前可交互 WorldState 中的单个非销毁实体的详细信息。",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "要查询的实体的类型 (Item, Character, Place)。",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "要查询的实体的 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockId",
            "in": "query",
            "description": "目标 Block 的 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功返回实体详细信息。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "缺少必需的 'blockId' 查询参数。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "未在指定 Block 中找到实体，或 Block 未找到。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/{blockId}/GameState": {
      "get": {
        "tags": [
          "GameState"
        ],
        "summary": "获取指定 Block 的当前 GameState。",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "目标 Block 的 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功返回 GameState。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GameStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStateDto"
                }
              }
            }
          },
          "404": {
            "description": "未找到具有指定 ID 的 Block。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameState"
        ],
        "summary": "修改指定 Block 的 GameState。使用 PATCH 方法进行部分更新。",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "目标 Block 的 ID。",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "包含要更新的 GameState 键值对的请求体。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameStateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameStateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameStateRequestDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "GameState 更新成功。"
          },
          "400": {
            "description": "请求体无效。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "未找到具有指定 ID 的 Block。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "更新时发生内部服务器错误。"
          }
        }
      }
    },
    "/api/Persistence/save": {
      "post": {
        "tags": [
          "Persistence"
        ],
        "summary": "保存当前 YAESandBox 的完整状态（包括所有 Block、WorldState、GameState）到一个 JSON 文件。\r\n客户端可以（可选地）在请求体中提供需要一同保存的“盲存”数据。",
        "requestBody": {
          "description": "（可选）客户端提供的任意 JSON 格式的盲存数据，将原样保存在存档文件中。",
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功生成并返回存档文件。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "保存状态时发生内部服务器错误。"
          }
        }
      }
    },
    "/api/Persistence/load": {
      "post": {
        "tags": [
          "Persistence"
        ],
        "summary": "从上传的 JSON 存档文件加载 YAESandBox 的状态。\r\n这将完全替换当前内存中的所有 Block、WorldState 和 GameState。\r\n成功加载后，将返回存档文件中包含的“盲存”数据（如果存在）。",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "archiveFile": {
                    "type": "string",
                    "description": "包含 YAESandBox 存档的 JSON 文件。",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "archiveFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功加载状态，并返回盲存数据。",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "没有上传文件，或者上传的文件格式无效 (非 JSON 或内容损坏)。",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "加载状态时发生内部服务器错误。"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AtomicOperationRequestDto": {
        "required": [
          "entityId",
          "entityType",
          "operationType"
        ],
        "type": "object",
        "properties": {
          "operationType": {
            "minLength": 1,
            "type": "string",
            "description": "操作类型。必须是 \"CreateEntity\", \"ModifyEntity\", 或 \"DeleteEntity\" (不区分大小写)。"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entityId": {
            "minLength": 1,
            "type": "string",
            "description": "操作目标实体的唯一 ID。不能为空或仅包含空白字符。"
          },
          "initialAttributes": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "description": "(仅用于 CreateEntity 操作)\r\n要创建的实体的初始属性字典。键是属性名，值是属性值。\r\n如果不提供，则实体以默认属性创建。",
            "nullable": true
          },
          "attributeKey": {
            "type": "string",
            "description": "(仅用于 ModifyEntity 操作)\r\n要修改的属性的键（名称）。",
            "nullable": true
          },
          "modifyOperator": {
            "type": "string",
            "description": "(仅用于 ModifyEntity 操作)\r\n修改操作符。预期值为 \"=\", \"+=\", \"-=\" 等表示赋值、增加、减少等操作的字符串。\r\n具体支持的操作符取决于后端实现 (YAESandBox.Core.State.Entity.OperatorHelper)。",
            "nullable": true
          },
          "modifyValue": {
            "description": "(仅用于 ModifyEntity 操作)\r\n修改操作的值。类型应与目标属性和操作符兼容。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "用于 API 请求的单个原子操作的表示。\r\n定义了对 WorldState 中实体的创建、修改或删除操作。"
      },
      "BatchAtomicRequestDto": {
        "required": [
          "operations"
        ],
        "type": "object",
        "properties": {
          "operations": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomicOperationRequestDto"
            },
            "description": "要执行的原子操作请求列表。该列表不能为空。"
          }
        },
        "additionalProperties": false,
        "description": "包含用于批量执行的原子操作请求列表。"
      },
      "BlockDetailDto": {
        "type": "object",
        "properties": {
          "blockId": {
            "type": "string",
            "description": "Block 的唯一标识符。",
            "nullable": true
          },
          "parentBlockId": {
            "type": "string",
            "description": "父 Block 的 ID。如果为根节点，则为 null。",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/BlockStatusCode"
          },
          "blockContent": {
            "type": "string",
            "description": "Block 的主要文本内容 (例如 AI 生成的文本、配置等)。",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "与 Block 相关的元数据字典 (键值对均为字符串)。",
            "nullable": true
          },
          "childrenInfo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "该 Block 的直接子 Block 的 ID 列表。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "用于 API 响应，表示单个 Block 的详细信息（不包含 WorldState）。"
      },
      "BlockStatusCode": {
        "enum": [
          "Loading",
          "Idle",
          "ResolvingConflict",
          "Error"
        ],
        "type": "string"
      },
      "CreateBlockManualRequestDto": {
        "required": [
          "parentBlockId"
        ],
        "type": "object",
        "properties": {
          "parentBlockId": {
            "minLength": 1,
            "type": "string",
            "description": "新 Block 的父 Block ID。必须指定一个有效的、存在的 Block ID。"
          },
          "initialMetadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "(可选) 新 Block 的初始元数据。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "手动创建 Block 的请求体。"
      },
      "EntityDetailDto": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "实体的唯一 ID。",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "isDestroyed": {
            "type": "boolean",
            "description": "指示实体是否已被标记为销毁。\r\n注意：查询 API 通常只返回未销毁的实体。"
          },
          "name": {
            "type": "string",
            "description": "实体的名称 (通常来自 'name' 属性，如果不存在则可能回退到 EntityId)。",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "用于 API 响应，表示实体的详细信息，包含所有属性。\r\n继承自 YAESandBox.API.DTOs.EntitySummaryDto。"
      },
      "EntitySummaryDto": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "实体的唯一 ID。",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "isDestroyed": {
            "type": "boolean",
            "description": "指示实体是否已被标记为销毁。\r\n注意：查询 API 通常只返回未销毁的实体。"
          },
          "name": {
            "type": "string",
            "description": "实体的名称 (通常来自 'name' 属性，如果不存在则可能回退到 EntityId)。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "用于 API 响应，表示实体的基本摘要信息。"
      },
      "EntityType": {
        "enum": [
          "Item",
          "Character",
          "Place"
        ],
        "type": "string"
      },
      "GameStateDto": {
        "type": "object",
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "description": "包含 GameState 所有设置的字典。\r\n键是设置的名称 (string)，值是设置的值 (object?)。\r\n值的实际类型取决于具体的游戏状态设置。",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "用于 API 响应，表示一个 Block 的 GameState。"
      },
      "JsonBlockNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonBlockNode"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MoveBlockRequestDto": {
        "required": [
          "newParentBlockId"
        ],
        "type": "object",
        "properties": {
          "newParentBlockId": {
            "minLength": 1,
            "type": "string",
            "description": "Block 要移动到的新父节点的 ID。必须指定一个有效的、存在的 Block ID。"
          }
        },
        "additionalProperties": false,
        "description": "手动移动 Block 的请求体。"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UpdateGameStateRequestDto": {
        "required": [
          "settingsToUpdate"
        ],
        "type": "object",
        "properties": {
          "settingsToUpdate": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "description": "一个字典，包含要更新或添加的 GameState 设置。\r\n键是要修改的设置名称，值是新的设置值。\r\n如果值为 null，通常表示移除该设置或将其设置为空。"
          }
        },
        "additionalProperties": false,
        "description": "用于 API 请求，表示要更新的 GameState 设置。"
      }
    }
  }
}