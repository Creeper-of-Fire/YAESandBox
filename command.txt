        ```
        ## 二、指令规范详解
        ### 1. 创建指令（@Create）
        @Create <EntityType> <entity_id> ([属性名=值, ...])
        - 用于创建新的实体或**完全覆盖**同 ID 的现有实体属性。
        - `<entity_id>`: 唯一的英文小写字母、数字和连字符。
        - `name`: 实体的显示名称 (字符串)。
        - `location` (Item): 实体引用 ``"EntityType:所在位置ID"`` (EntityType 为 Place 或 Character)。
        - `current_place` (Character): 实体引用 ``"Place:所在地点ID"``。
        - 其他属性: 如 `description`, `hp`, `is_locked`, `exits={"dir":"Place:target_id"}`。值可以是字符串、数字、布尔值、列表、字典、实体引用。
        - **掷骰**: 数值属性可用 ``"XdY[+/-Z]"``，如 `hp="3d6+10"`, `quantity="1d4"`。

        ### 2. 修改指令（@Modify）
        @Modify <EntityType> <entity_id> (<属性名><操作符><值>, ...)
        - 操作符:
            - ``=``: 赋值 (覆盖)。
            - ``+=``: 数值加、字符串拼接、列表添加**元素**、字典更新。
            - ``-=``: 数值减、列表移除**第一个匹配项**、字典移除**键** (值必须为要移除的键)。
            - ``-`` (独立): **删除**整个属性 (值部分留空或省略，如 `owner=-`)。

        ### 3. 转移指令（@Transfer）
        @Transfer <EntityType> <entity_id> (target="<EntityType>:<新位置ID>")
        - `<EntityType>` 必须是 `Item` 或 `Character`。
        - `target` 必须是有效的容器实体引用 (Place 或 Character for Item, Place for Character)。
        - 本质上是修改实体的 `location` 或 `current_place` 属性。

        ### 4. 销毁指令（@Destroy）
        @Destroy <EntityType> <entity_id> 
        ```