{
    "hashes": {
        "launcher": "aebe2ad900ba295356a50e22938f42bcf78673cc1d1036a18598b7bdddd10130",
        "app": "ff4e57c07852b9561fd2f255297a2ce73ba8df908fe6f1f87984bfb61d00c10a",
        "backend": "b2b631d5cbcdc1054097c7d53b17c9c5b3c852b54ff895f3228f1f10bd427096",
        "backend-slim": "82c463bcb877e808a685d54defa94e114cb0c5e265dc2c541f0be33d12763c63",
        "plugins": {
            "YAESandBox.Plugin.LuaScript": "2742697ff69b7f1677afdc08e179a7b263b016c5c63abda5d6924737896a9857",
            "YAESandBox.Plugin.TextParser": "2f5dd322432b762b2317b631017046d9b43a622dafffd9d5933ccdc9aad43bdb"
        }
    },
    "manifests": {
        "full": {
            "components": [
                {
                    "id": "launcher",
                    "name": "启动器",
                    "version": "0.0.16",
                    "notes": "重新全部发布一遍试试看。好像文件校验刚刚有问题。",
                    "hash": "00224aabe43bcc8845567e231f62ccc09e8910fda1e56fc2b3bea82fe93815ea",
                    "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.16/launcher.zip"
                },
                {
                    "id": "app",
                    "name": "前端应用",
                    "version": "0.0.26",
                    "notes": "本次更新聚焦于两大核心领域：对工作流执行引擎的根本性重构，以及对工作台前端编辑体验的全面现代化。我们引入了全新的可视化编辑器和通用的图执行模型，并对编辑器状态管理进行了彻底的重构，以提升性能、可维护性和用户体验。\n\n#### ✨ 新特性 (Features)\n\n*   **全新可视化工作流编辑器**: 引入了直观的图形化编辑器，用于编排工作流与枢机（Tuum）之间的关系。编辑器支持拖拽节点、连接、多选等基本操作，并能**自动持久化节点布局**，提升了工作流的配置效率和可读性。\n*   **增强的符文变量信息展示**: 在编辑器中，变量标签现在可以通过悬浮提示展示其类型定义、描述和可选性等更丰富的元信息。\n*   **新增动态字符串列表组件**: 表单系统现已支持可动态增删的字符串数组成员，提升了相关配置的灵活性。\n\n#### 🛠️ 重构与优化 (Refactoring & Optimizations)\n\n##### **核心执行引擎重构：向通用图模型演进**\n\n新的可视化编辑器由一个通用的、基于图的执行引擎 `GraphExecutor` 驱动，它替代了原有的线性执行逻辑。这一重构使得工作流的处理更加灵活和强大。\n\n在重构过程中，我们曾为简化数据流引入了 `Context` 类型。然而，为保持符文的独立性并提升性能，我们最终决定移除这一设计。相关的 `PromptGenerationRune` 和 `StaticVariableRune` 等核心符文已恢复为直接处理离散变量，简化了其内部逻辑。\n\n##### **工作台体验升级：全局编辑会话与上下文管理**\n\n对前端编辑器的状态管理进行了彻底的重构。原有的 `EditSession` 已升级为全局唯一的 `GlobalEditSession`，并引入了 `EditorContext` 来统一管理选中项和编辑操作。\n\n*   **统一的状态管理**: 通过 `useActiveEditorContext` 等新的 Composable 函数，我们集中了编辑状态的来源，解决了之前数据响应不同步的问题。\n*   **性能与响应性提升**: 优化了组件的渲染和数据绑定方式，显著提升了编辑面板和工作流编辑器的流畅度。\n*   **代码结构优化**: 移除了旧的状态管理模式，使代码库更加清晰和易于维护。\n*   **UI 一致性**: 重构了颜色计算逻辑，并统一了工作流节点的样式，确保在不同主题下表现一致。\n\n#### 🐛 修复 (Fixes)\n\n*   **工作流**: 修复了工作流入口标识符（`__workflow_input__`）与后端不一致的问题。\n*   **工作流**: 增强了图执行器的数据处理能力，通过 `postProcessOutput` 参数防止了扇出场景下的数据污染。\n*   **工作台**: 修复了编辑面板与工作流编辑器之间因数据双向绑定导致的响应不同步问题。\n*   **LuaScriptRune**: 更新了正则表达式，以正确匹配包含 `@type` 注释的变量定义。\n\n#### 展望\n\n目前，后端的枢机（Tuum）与符文（Rune）层级已具备支持图形化连接的能力。然而，为了保持清晰的抽象层次和良好的用户体验，前端的工作流编辑器将专注于工作流（Workflow）与枢机（Tuum）之间的连接。\n\n我们认为，枢机内部的符文组织应遵循更简洁的范式。因此，下一步计划是将枢机-符文的交互模型改回原有的非图形化模式，以简化配置并降低复杂性。",
                    "hash": "09350a7f014ce59575a8c28d5ff401530548ca92f3ac9f930efcb8e0f6e42b30",
                    "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.26/app.zip"
                },
                {
                    "id": "backend",
                    "name": ".NET 后端 (完整版)",
                    "version": "0.0.26",
                    "notes": "本次更新聚焦于两大核心领域：对工作流执行引擎的根本性重构，以及对工作台前端编辑体验的全面现代化。我们引入了全新的可视化编辑器和通用的图执行模型，并对编辑器状态管理进行了彻底的重构，以提升性能、可维护性和用户体验。\n\n#### ✨ 新特性 (Features)\n\n*   **全新可视化工作流编辑器**: 引入了直观的图形化编辑器，用于编排工作流与枢机（Tuum）之间的关系。编辑器支持拖拽节点、连接、多选等基本操作，并能**自动持久化节点布局**，提升了工作流的配置效率和可读性。\n*   **增强的符文变量信息展示**: 在编辑器中，变量标签现在可以通过悬浮提示展示其类型定义、描述和可选性等更丰富的元信息。\n*   **新增动态字符串列表组件**: 表单系统现已支持可动态增删的字符串数组成员，提升了相关配置的灵活性。\n\n#### 🛠️ 重构与优化 (Refactoring & Optimizations)\n\n##### **核心执行引擎重构：向通用图模型演进**\n\n新的可视化编辑器由一个通用的、基于图的执行引擎 `GraphExecutor` 驱动，它替代了原有的线性执行逻辑。这一重构使得工作流的处理更加灵活和强大。\n\n在重构过程中，我们曾为简化数据流引入了 `Context` 类型。然而，为保持符文的独立性并提升性能，我们最终决定移除这一设计。相关的 `PromptGenerationRune` 和 `StaticVariableRune` 等核心符文已恢复为直接处理离散变量，简化了其内部逻辑。\n\n##### **工作台体验升级：全局编辑会话与上下文管理**\n\n对前端编辑器的状态管理进行了彻底的重构。原有的 `EditSession` 已升级为全局唯一的 `GlobalEditSession`，并引入了 `EditorContext` 来统一管理选中项和编辑操作。\n\n*   **统一的状态管理**: 通过 `useActiveEditorContext` 等新的 Composable 函数，我们集中了编辑状态的来源，解决了之前数据响应不同步的问题。\n*   **性能与响应性提升**: 优化了组件的渲染和数据绑定方式，显著提升了编辑面板和工作流编辑器的流畅度。\n*   **代码结构优化**: 移除了旧的状态管理模式，使代码库更加清晰和易于维护。\n*   **UI 一致性**: 重构了颜色计算逻辑，并统一了工作流节点的样式，确保在不同主题下表现一致。\n\n#### 🐛 修复 (Fixes)\n\n*   **工作流**: 修复了工作流入口标识符（`__workflow_input__`）与后端不一致的问题。\n*   **工作流**: 增强了图执行器的数据处理能力，通过 `postProcessOutput` 参数防止了扇出场景下的数据污染。\n*   **工作台**: 修复了编辑面板与工作流编辑器之间因数据双向绑定导致的响应不同步问题。\n*   **LuaScriptRune**: 更新了正则表达式，以正确匹配包含 `@type` 注释的变量定义。\n\n#### 展望\n\n目前，后端的枢机（Tuum）与符文（Rune）层级已具备支持图形化连接的能力。然而，为了保持清晰的抽象层次和良好的用户体验，前端的工作流编辑器将专注于工作流（Workflow）与枢机（Tuum）之间的连接。\n\n我们认为，枢机内部的符文组织应遵循更简洁的范式。因此，下一步计划是将枢机-符文的交互模型改回原有的非图形化模式，以简化配置并降低复杂性。",
                    "hash": "079d4fd496cb5ff911306e26811eb4eb7c63f60b8f4a987116db8a1c3c13814e",
                    "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.26/backend.zip"
                }
            ]
        },
        "slim": {
            "components": [
                {
                    "id": "launcher",
                    "name": "启动器",
                    "version": "0.0.16",
                    "notes": "重新全部发布一遍试试看。好像文件校验刚刚有问题。",
                    "hash": "00224aabe43bcc8845567e231f62ccc09e8910fda1e56fc2b3bea82fe93815ea",
                    "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.16/launcher.zip"
                },
                {
                    "id": "app",
                    "name": "前端应用",
                    "version": "0.0.26",
                    "notes": "本次更新聚焦于两大核心领域：对工作流执行引擎的根本性重构，以及对工作台前端编辑体验的全面现代化。我们引入了全新的可视化编辑器和通用的图执行模型，并对编辑器状态管理进行了彻底的重构，以提升性能、可维护性和用户体验。\n\n#### ✨ 新特性 (Features)\n\n*   **全新可视化工作流编辑器**: 引入了直观的图形化编辑器，用于编排工作流与枢机（Tuum）之间的关系。编辑器支持拖拽节点、连接、多选等基本操作，并能**自动持久化节点布局**，提升了工作流的配置效率和可读性。\n*   **增强的符文变量信息展示**: 在编辑器中，变量标签现在可以通过悬浮提示展示其类型定义、描述和可选性等更丰富的元信息。\n*   **新增动态字符串列表组件**: 表单系统现已支持可动态增删的字符串数组成员，提升了相关配置的灵活性。\n\n#### 🛠️ 重构与优化 (Refactoring & Optimizations)\n\n##### **核心执行引擎重构：向通用图模型演进**\n\n新的可视化编辑器由一个通用的、基于图的执行引擎 `GraphExecutor` 驱动，它替代了原有的线性执行逻辑。这一重构使得工作流的处理更加灵活和强大。\n\n在重构过程中，我们曾为简化数据流引入了 `Context` 类型。然而，为保持符文的独立性并提升性能，我们最终决定移除这一设计。相关的 `PromptGenerationRune` 和 `StaticVariableRune` 等核心符文已恢复为直接处理离散变量，简化了其内部逻辑。\n\n##### **工作台体验升级：全局编辑会话与上下文管理**\n\n对前端编辑器的状态管理进行了彻底的重构。原有的 `EditSession` 已升级为全局唯一的 `GlobalEditSession`，并引入了 `EditorContext` 来统一管理选中项和编辑操作。\n\n*   **统一的状态管理**: 通过 `useActiveEditorContext` 等新的 Composable 函数，我们集中了编辑状态的来源，解决了之前数据响应不同步的问题。\n*   **性能与响应性提升**: 优化了组件的渲染和数据绑定方式，显著提升了编辑面板和工作流编辑器的流畅度。\n*   **代码结构优化**: 移除了旧的状态管理模式，使代码库更加清晰和易于维护。\n*   **UI 一致性**: 重构了颜色计算逻辑，并统一了工作流节点的样式，确保在不同主题下表现一致。\n\n#### 🐛 修复 (Fixes)\n\n*   **工作流**: 修复了工作流入口标识符（`__workflow_input__`）与后端不一致的问题。\n*   **工作流**: 增强了图执行器的数据处理能力，通过 `postProcessOutput` 参数防止了扇出场景下的数据污染。\n*   **工作台**: 修复了编辑面板与工作流编辑器之间因数据双向绑定导致的响应不同步问题。\n*   **LuaScriptRune**: 更新了正则表达式，以正确匹配包含 `@type` 注释的变量定义。\n\n#### 展望\n\n目前，后端的枢机（Tuum）与符文（Rune）层级已具备支持图形化连接的能力。然而，为了保持清晰的抽象层次和良好的用户体验，前端的工作流编辑器将专注于工作流（Workflow）与枢机（Tuum）之间的连接。\n\n我们认为，枢机内部的符文组织应遵循更简洁的范式。因此，下一步计划是将枢机-符文的交互模型改回原有的非图形化模式，以简化配置并降低复杂性。",
                    "hash": "09350a7f014ce59575a8c28d5ff401530548ca92f3ac9f930efcb8e0f6e42b30",
                    "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.26/app.zip"
                },
                {
                    "id": "backend",
                    "name": ".NET 后端 (精简版)",
                    "version": "0.0.26",
                    "notes": "本次更新聚焦于两大核心领域：对工作流执行引擎的根本性重构，以及对工作台前端编辑体验的全面现代化。我们引入了全新的可视化编辑器和通用的图执行模型，并对编辑器状态管理进行了彻底的重构，以提升性能、可维护性和用户体验。\n\n#### ✨ 新特性 (Features)\n\n*   **全新可视化工作流编辑器**: 引入了直观的图形化编辑器，用于编排工作流与枢机（Tuum）之间的关系。编辑器支持拖拽节点、连接、多选等基本操作，并能**自动持久化节点布局**，提升了工作流的配置效率和可读性。\n*   **增强的符文变量信息展示**: 在编辑器中，变量标签现在可以通过悬浮提示展示其类型定义、描述和可选性等更丰富的元信息。\n*   **新增动态字符串列表组件**: 表单系统现已支持可动态增删的字符串数组成员，提升了相关配置的灵活性。\n\n#### 🛠️ 重构与优化 (Refactoring & Optimizations)\n\n##### **核心执行引擎重构：向通用图模型演进**\n\n新的可视化编辑器由一个通用的、基于图的执行引擎 `GraphExecutor` 驱动，它替代了原有的线性执行逻辑。这一重构使得工作流的处理更加灵活和强大。\n\n在重构过程中，我们曾为简化数据流引入了 `Context` 类型。然而，为保持符文的独立性并提升性能，我们最终决定移除这一设计。相关的 `PromptGenerationRune` 和 `StaticVariableRune` 等核心符文已恢复为直接处理离散变量，简化了其内部逻辑。\n\n##### **工作台体验升级：全局编辑会话与上下文管理**\n\n对前端编辑器的状态管理进行了彻底的重构。原有的 `EditSession` 已升级为全局唯一的 `GlobalEditSession`，并引入了 `EditorContext` 来统一管理选中项和编辑操作。\n\n*   **统一的状态管理**: 通过 `useActiveEditorContext` 等新的 Composable 函数，我们集中了编辑状态的来源，解决了之前数据响应不同步的问题。\n*   **性能与响应性提升**: 优化了组件的渲染和数据绑定方式，显著提升了编辑面板和工作流编辑器的流畅度。\n*   **代码结构优化**: 移除了旧的状态管理模式，使代码库更加清晰和易于维护。\n*   **UI 一致性**: 重构了颜色计算逻辑，并统一了工作流节点的样式，确保在不同主题下表现一致。\n\n#### 🐛 修复 (Fixes)\n\n*   **工作流**: 修复了工作流入口标识符（`__workflow_input__`）与后端不一致的问题。\n*   **工作流**: 增强了图执行器的数据处理能力，通过 `postProcessOutput` 参数防止了扇出场景下的数据污染。\n*   **工作台**: 修复了编辑面板与工作流编辑器之间因数据双向绑定导致的响应不同步问题。\n*   **LuaScriptRune**: 更新了正则表达式，以正确匹配包含 `@type` 注释的变量定义。\n\n#### 展望\n\n目前，后端的枢机（Tuum）与符文（Rune）层级已具备支持图形化连接的能力。然而，为了保持清晰的抽象层次和良好的用户体验，前端的工作流编辑器将专注于工作流（Workflow）与枢机（Tuum）之间的连接。\n\n我们认为，枢机内部的符文组织应遵循更简洁的范式。因此，下一步计划是将枢机-符文的交互模型改回原有的非图形化模式，以简化配置并降低复杂性。",
                    "hash": "5cc652e75bfaf11e9056da9456f18b868bebc8188f5eea5848417a91902d2b64",
                    "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.26/backend-slim.zip"
                }
            ]
        },
        "plugins": [
            {
                "id": "YAESandBox.Plugin.LuaScript",
                "name": "YAESandBox.Plugin.LuaScript",
                "version": "0.0.26",
                "description": "发布于 v0.0.26:\n本次更新聚焦于两大核心领域：对工作流执行引擎的根本性重构，以及对工作台前端编辑体验的全面现代化。我们引入了全新的可视化编辑器和通用的图执行模型，并对编辑器状态管理进行了彻底的重构，以提升性能、可维护性和用户体验。\n\n#### ✨ 新特性 (Features)\n\n*   **全新可视化工作流编辑器**: 引入了直观的图形化编辑器，用于编排工作流与枢机（Tuum）之间的关系。编辑器支持拖拽节点、连接、多选等基本操作，并能**自动持久化节点布局**，提升了工作流的配置效率和可读性。\n*   **增强的符文变量信息展示**: 在编辑器中，变量标签现在可以通过悬浮提示展示其类型定义、描述和可选性等更丰富的元信息。\n*   **新增动态字符串列表组件**: 表单系统现已支持可动态增删的字符串数组成员，提升了相关配置的灵活性。\n\n#### 🛠️ 重构与优化 (Refactoring & Optimizations)\n\n##### **核心执行引擎重构：向通用图模型演进**\n\n新的可视化编辑器由一个通用的、基于图的执行引擎 `GraphExecutor` 驱动，它替代了原有的线性执行逻辑。这一重构使得工作流的处理更加灵活和强大。\n\n在重构过程中，我们曾为简化数据流引入了 `Context` 类型。然而，为保持符文的独立性并提升性能，我们最终决定移除这一设计。相关的 `PromptGenerationRune` 和 `StaticVariableRune` 等核心符文已恢复为直接处理离散变量，简化了其内部逻辑。\n\n##### **工作台体验升级：全局编辑会话与上下文管理**\n\n对前端编辑器的状态管理进行了彻底的重构。原有的 `EditSession` 已升级为全局唯一的 `GlobalEditSession`，并引入了 `EditorContext` 来统一管理选中项和编辑操作。\n\n*   **统一的状态管理**: 通过 `useActiveEditorContext` 等新的 Composable 函数，我们集中了编辑状态的来源，解决了之前数据响应不同步的问题。\n*   **性能与响应性提升**: 优化了组件的渲染和数据绑定方式，显著提升了编辑面板和工作流编辑器的流畅度。\n*   **代码结构优化**: 移除了旧的状态管理模式，使代码库更加清晰和易于维护。\n*   **UI 一致性**: 重构了颜色计算逻辑，并统一了工作流节点的样式，确保在不同主题下表现一致。\n\n#### 🐛 修复 (Fixes)\n\n*   **工作流**: 修复了工作流入口标识符（`__workflow_input__`）与后端不一致的问题。\n*   **工作流**: 增强了图执行器的数据处理能力，通过 `postProcessOutput` 参数防止了扇出场景下的数据污染。\n*   **工作台**: 修复了编辑面板与工作流编辑器之间因数据双向绑定导致的响应不同步问题。\n*   **LuaScriptRune**: 更新了正则表达式，以正确匹配包含 `@type` 注释的变量定义。\n\n#### 展望\n\n目前，后端的枢机（Tuum）与符文（Rune）层级已具备支持图形化连接的能力。然而，为了保持清晰的抽象层次和良好的用户体验，前端的工作流编辑器将专注于工作流（Workflow）与枢机（Tuum）之间的连接。\n\n我们认为，枢机内部的符文组织应遵循更简洁的范式。因此，下一步计划是将枢机-符文的交互模型改回原有的非图形化模式，以简化配置并降低复杂性。",
                "hash": "077825d992d2ef42ddf6258c3caf141c952b963efdfb372d4138f86039dbf528",
                "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.26/YAESandBox.Plugin.LuaScript.zip"
            },
            {
                "id": "YAESandBox.Plugin.TextParser",
                "name": "YAESandBox.Plugin.TextParser",
                "version": "0.0.26",
                "description": "发布于 v0.0.26:\n本次更新聚焦于两大核心领域：对工作流执行引擎的根本性重构，以及对工作台前端编辑体验的全面现代化。我们引入了全新的可视化编辑器和通用的图执行模型，并对编辑器状态管理进行了彻底的重构，以提升性能、可维护性和用户体验。\n\n#### ✨ 新特性 (Features)\n\n*   **全新可视化工作流编辑器**: 引入了直观的图形化编辑器，用于编排工作流与枢机（Tuum）之间的关系。编辑器支持拖拽节点、连接、多选等基本操作，并能**自动持久化节点布局**，提升了工作流的配置效率和可读性。\n*   **增强的符文变量信息展示**: 在编辑器中，变量标签现在可以通过悬浮提示展示其类型定义、描述和可选性等更丰富的元信息。\n*   **新增动态字符串列表组件**: 表单系统现已支持可动态增删的字符串数组成员，提升了相关配置的灵活性。\n\n#### 🛠️ 重构与优化 (Refactoring & Optimizations)\n\n##### **核心执行引擎重构：向通用图模型演进**\n\n新的可视化编辑器由一个通用的、基于图的执行引擎 `GraphExecutor` 驱动，它替代了原有的线性执行逻辑。这一重构使得工作流的处理更加灵活和强大。\n\n在重构过程中，我们曾为简化数据流引入了 `Context` 类型。然而，为保持符文的独立性并提升性能，我们最终决定移除这一设计。相关的 `PromptGenerationRune` 和 `StaticVariableRune` 等核心符文已恢复为直接处理离散变量，简化了其内部逻辑。\n\n##### **工作台体验升级：全局编辑会话与上下文管理**\n\n对前端编辑器的状态管理进行了彻底的重构。原有的 `EditSession` 已升级为全局唯一的 `GlobalEditSession`，并引入了 `EditorContext` 来统一管理选中项和编辑操作。\n\n*   **统一的状态管理**: 通过 `useActiveEditorContext` 等新的 Composable 函数，我们集中了编辑状态的来源，解决了之前数据响应不同步的问题。\n*   **性能与响应性提升**: 优化了组件的渲染和数据绑定方式，显著提升了编辑面板和工作流编辑器的流畅度。\n*   **代码结构优化**: 移除了旧的状态管理模式，使代码库更加清晰和易于维护。\n*   **UI 一致性**: 重构了颜色计算逻辑，并统一了工作流节点的样式，确保在不同主题下表现一致。\n\n#### 🐛 修复 (Fixes)\n\n*   **工作流**: 修复了工作流入口标识符（`__workflow_input__`）与后端不一致的问题。\n*   **工作流**: 增强了图执行器的数据处理能力，通过 `postProcessOutput` 参数防止了扇出场景下的数据污染。\n*   **工作台**: 修复了编辑面板与工作流编辑器之间因数据双向绑定导致的响应不同步问题。\n*   **LuaScriptRune**: 更新了正则表达式，以正确匹配包含 `@type` 注释的变量定义。\n\n#### 展望\n\n目前，后端的枢机（Tuum）与符文（Rune）层级已具备支持图形化连接的能力。然而，为了保持清晰的抽象层次和良好的用户体验，前端的工作流编辑器将专注于工作流（Workflow）与枢机（Tuum）之间的连接。\n\n我们认为，枢机内部的符文组织应遵循更简洁的范式。因此，下一步计划是将枢机-符文的交互模型改回原有的非图形化模式，以简化配置并降低复杂性。",
                "hash": "4f310dbcb2a9ad92a3eee64d04f68943afa07a5952ec91dd7bc3462373400deb",
                "url": "https://github.com/Creeper-of-Fire/YAESandBox/releases/download/v0.0.26/YAESandBox.Plugin.TextParser.zip"
            }
        ]
    }
}